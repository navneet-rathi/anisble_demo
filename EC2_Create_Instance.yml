---
- name: Create an EC2 instance
  hosts: all
  become: true
  gather_facts: False
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: create a new EC2 key pair, returns generated private key
      amazon.aws.ec2_key:
        name: my_keypair
      no_log: true
      register: aws_ec2_key_pair
      
    - name: Print Key Pair Name
      debug:
        msg: "{{ aws_ec2_key_pair.name }}"
        
    - name: create a VPC
      amazon.aws.ec2_vpc_net:
        name: Module_dev2
        cidr_block: 10.0.0.0/16
        ipv6_cidr: true
        region: us-east-1
        tenancy: dedicated
      register: vpc
      
    - name: Create subnet
      amazon.aws.ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: 10.0.0.0/28
        region: us-east-1
      register: subnet
      
    - name: Print Subnet ID
      debug:
        msg: "{{ subnet.subnet.id }}"
        
    - name: Create Security Group
      ec2_group:
        state: present
        name: demo-security-group
        description: "demo-security-group"
        vpc_id: "{{ vpc.vpc.id }}"
        region: us-east-1
        rules:
          - proto: 80
            ports:
              - 80
            cidr_ip: 0.0.0.0/0
            rule_desc: "allow all on port 80"
      register: security_group
      
    - name: start an instance with a public IP address
      amazon.aws.ec2_instance:
        name: "SBI_Demo_Instance"
        region: "us-east-1"
        key_name: vj-aaponaws-aug2024
        vpc_subnet_id: subnet-04ea2ff21ab98ebeb #"{{ subnet.subnet.id }}" subnet-0b83dbb79e38f5303
        instance_type: t2.micro
        security_group: sg-0934b0f4513ac959b #"{{ security_group.group_id }}" sg-01ef1792dd266b65a
        network:
          assign_public_ip: true
        image_id: ami-0583d8c7a9c35822c
        tags:
          Environment: Testing
      register: ec2

    - name: Print new instance ID
      debug:
        msg: "EC2 instance ID is {{ ec2.instance_ids[0] }}"
