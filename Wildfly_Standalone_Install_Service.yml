---
- name: Install JBoss EAP Standalone on RHEL
  hosts: all
  become: true
  vars:
    jboss_eap_version: "29.0.0.Final"
    jboss_eap_install_dir: "/opt/jboss"
  pre_tasks:
    - name: create install directory {{ jboss_eap_install_dir }}
      file:
        path: "{{ jboss_eap_install_dir }}"
        state: directory
    - name: Download JBoss EAP
      get_url:
        url: "https://github.com/wildfly/wildfly/releases/download/29.0.0.Final/wildfly-{{ jboss_eap_version }}.zip"
        dest: "/tmp/wildfly-{{ jboss_eap_version }}.zip"

  tasks: 
    - name: Extract JBoss EAP
      ansible.builtin.unarchive:
        src: "/tmp/wildfly-{{ jboss_eap_version }}.zip"
        dest: "{{ jboss_eap_install_dir }}"
        remote_src: yes
        creates: "{{ jboss_eap_install_dir }}/wildfly-{{ jboss_eap_version }}"

    - name: Create JBoss EAP Systemd Service File
      copy:
        content: |
          [Unit]
          Description=JBoss EAP Standalone Server
          After=network.target
          
          [Service]
          Type=simple
          ExecStart={{ jboss_eap_install_dir }}/wildfly-{{ jboss_eap_version }}/bin/standalone.sh -c standalone.xml
          ExecStop={{ jboss_eap_install_dir }}/wildfly-{{ jboss_eap_version }}/bin/jboss-cli.sh --connect command=:shutdown
          User=root
          Group=root
          Restart=always
          
          [Install]
          WantedBy=multi-user.target
        dest: "/etc/systemd/system/jboss-eap.service"

    - name: Reload systemd and Start JBoss EAP Service
      systemd:
        name: jboss-eap
        state: started
        enabled: yes

    - name: Open necessary ports in firewall
      ansible.builtin.firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      loop:
        - 8080/tcp
        - 9990/tcp

    - name: Ensure SELinux allows JBoss EAP ports
      ansible.builtin.seboolean:
        name: httpd_can_network_connect
        state: yes
        persistent: yes

  handlers:
    - name: Reload firewall
      ansible.builtin.firewalld:
        state: restarted
